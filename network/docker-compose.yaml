version: "2.2"

volumes:
  orderer1.example.com:
  orderer2.example.com:
  orderer3.example.com:
  peer0.medicfootprints.com:
  peer1.medicfootprints.com:

networks:
  fabric_network:
    name: fabric_network

services:
  ca.medicfootprints.com:
    image: hyperledger/fabric-ca:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.medicfootprints.com
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=7054
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:17054
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.medicfootprints.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${BYFN_CA1_PRIVATE_KEY}
    ports:
      - "7054:7054"
      - "17054:17054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.medicfootprints.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/${BYFN_CA1_PRIVATE_KEY} -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/medicfootprints.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.medicfootprints.com
    networks:
      - fabric_network


  # Ordering service node
  orderer1.example.com:
    container_name: orderer1.example.com
    image: hyperledger/fabric-orderer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - GODEBUG=netdns=go
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/config/genesis.block # Injecting the Genesis Block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer/msp # certificated
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/etc/hyperledger/orderer/tls/server.crt
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/etc/hyperledger/orderer/tls/server.key
      - ORDERER_ADMIN_TLS_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]
      #   - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7055
      #   - ORDERER_OPERATIONS_LISTENADDRESS=orderer1.example.com:9446
      - ORDERER_METRICS_PROVIDER=prometheus
    command: orderer
    ports:
      - "7050:7050"
    #    - "7055:7055"
    #   - "9446:9446"
    volumes: # Mounting the certificate files and genesis block generated by cryptogen and configtxgen.
      - ./config/genesis.block:/etc/hyperledger/config/genesis.block
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/:/etc/hyperledger/orderer
      - orderer1.example.com:/var/hyperledger/production/orderer
    networks:
      - fabric_network

  orderer2.example.com:
    container_name: orderer2.example.com
    image: hyperledger/fabric-orderer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - GODEBUG=netdns=go
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/config/genesis.block # Injecting the Genesis Block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer/msp # certificated
    command: orderer
    ports:
      - "7052:7052"
    volumes: # Mounting the certificate files and genesis block generated by cryptogen and configtxgen.
      - ./config/genesis.block:/etc/hyperledger/config/genesis.block
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/:/etc/hyperledger/orderer
      - orderer2.example.com:/var/hyperledger/production/orderer
    networks:
      - fabric_network

  orderer3.example.com:
    container_name: orderer3.example.com
    image: hyperledger/fabric-orderer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - GODEBUG=netdns=go
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/config/genesis.block # Injecting the Genesis Block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer/msp # certificated
    command: orderer
    ports:
      - "7056:7056"
    volumes: # Mounting the certificate files and genesis block generated by cryptogen and configtxgen.
      - ./config/genesis.block:/etc/hyperledger/config/genesis.block
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/:/etc/hyperledger/orderer
      - orderer3.example.com:/var/hyperledger/production/orderer
    networks:
      - fabric_network

  # MedicFootprints peer0 node
  peer0.medicfootprints.com:
    extends:
      file: docker-compose-base.yaml
      service: peer-base
    container_name: peer0.medicfootprints.com
    image: hyperledger/fabric-peer:latest
    labels:
      service: hyperledger-fabric
    environment:
      # Peer specific variables
      - CORE_PEER_ID=peer0.medicfootprints.com
      - CORE_PEER_ADDRESS=peer0.medicfootprints.com:7051
      - CORE_PEER_LOCALMSPID=MedicFootprintsMSP
      # couchDB
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0.medicfootprints.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin123
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=admin123
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/peer/tls/ca.crt
    ports:
      - "7051:7051" # grpc服务端口
      - "7053:7053" # eventhub端口
    volumes:
      - ./crypto-config/peerOrganizations/medicfootprints.com/peers/peer0.medicfootprints.com:/etc/hyperledger/peer
      - peer0.medicfootprints.com:/var/hyperledger/production
    command: peer node start
    depends_on:
      - orderer1.example.com
      - couchdb0.medicfootprints.com
    networks:
      - fabric_network

  couchdb0.medicfootprints.com:
    container_name: couchdb0.medicfootprints.com
    image: couchdb:3.3.2
    environment:
      - COUCHDB_USER=admin123
      - COUCHDB_PASSWORD=admin123
    ports:
      - "5984:5984"
    networks:
      - fabric_network

  # MedicFootprints peer1 node
  peer1.medicfootprints.com:
    extends:
      file: docker-compose-base.yaml
      service: peer-base
    container_name: peer1.medicfootprints.com
    image: hyperledger/fabric-peer:latest
    labels:
      service: hyperledger-fabric
    environment:
      # Peer specific variables
      - CORE_PEER_ID=peer1.medicfootprints.com
      - CORE_PEER_ADDRESS=peer1.medicfootprints.com:7051
      - CORE_PEER_LOCALMSPID=MedicFootprintsMSP
      # couchDB
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1.medicfootprints.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin123
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=admin123
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/peer/tls/ca.crt
    ports:
      - "17051:7051" # grpc服务端口
      - "17053:7053" # eventhub端口
    volumes:
      - ./crypto-config/peerOrganizations/medicfootprints.com/peers/peer1.medicfootprints.com:/etc/hyperledger/peer
      - peer1.medicfootprints.com:/var/hyperledger/production
    command: peer node start
    depends_on:
      - orderer1.example.com
      - couchdb1.medicfootprints.com
    networks:
      - fabric_network

  couchdb1.medicfootprints.com:
    container_name: couchdb1.medicfootprints.com
    image: couchdb:3.3.2
    environment:
      - COUCHDB_USER=admin123
      - COUCHDB_PASSWORD=admin123
    ports:
      - "6984:5984"
    networks:
      - fabric_network

  # client node
  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    labels:
      service: hyperledger-fabric
    tty: true
    stdin_open: true
    environment:
      # go environment setting
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - GO111MODULE=auto
      - GOPATH=/opt/gopath
      - CORE_PEER_ADDRESS=peer0.medicfootprints.com:7051
      - CORE_PEER_LOCALMSPID=MedicFootprintsMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/medicfootprints.com/peers/peer0.medicfootprints.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/medicfootprints.com/peers/peer0.medicfootprints.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/medicfootprints.com/peers/peer0.medicfootprints.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/medicfootprints.com/users/Admin@medicfootprints.com/msp
      - GOPROXY=https://goproxy.cn
      - CORE_PEER_ID=cli
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
    command: /bin/bash
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    volumes:
      - /var/run/:/host/var/run/
      - ./config:/etc/hyperledger/config
      - ./crypto-config/peerOrganizations/medicfootprints.com/:/etc/hyperledger/fabric/peer/medicfootprints.com
      - ./../chaincode:/opt/gopath/src/chaincode # Chain Code Path Injection
    networks:
      - fabric_network
    depends_on:
      - orderer1.example.com
      - peer0.medicfootprints.com
      - couchdb0.medicfootprints.com
      - peer1.medicfootprints.com
      - couchdb1.medicfootprints.com
    networks:
      - fabric_network
# docker exec cli bash -c "$medicfootprintsPeer0Cli peer channel create -o orderer1.example.com:7050 -c appchannel -f /etc/hyperledger/config/appchannel.tx"

# medicfootprintsPeer0Cli="CORE_PEER_ADDRESS=peer0.medicfootprints.com:7051 CORE_PEER_LOCALMSPID=MedicFootprintsMSP CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer/medicfootprints.com/users/Admin@medicfootprints.com/msp"

# medicfootprintsPeer1Cli="CORE_PEER_ADDRESS=peer1.medicfootprints.com:7051 CORE_PEER_LOCALMSPID=MedicFootprintsMSP CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer/medicfootprints.com/users/Admin@medicfootprints.com/msp"
